{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"Python/","text":"Python pour les macros # Le plugin/framework MkDocs-Macros offre de \"lib\u00e9rer la puissance de Mkdocs, en utilisant des variables et des macros\" \u00e0 partir de scripts cod\u00e9s en Python... Installation # Dans Visual Studio Code (VSC), ouvrir un nouveau Terminal (menu Terminal > New Terminal ) pour saisir : pip install mkdocs-macros-plugin Dans le dossier du projet, modifier les fichiers suivants tels que : mkdocs.yml plugins : - search - mkdocs-jupyter : include_source : True - macros ci.yml name : ci on : push : branches : - main jobs : deploy : runs-on : ubuntu-latest steps : - uses : actions/checkout@v2 - uses : actions/setup-python@v2 with : python-version : 3.x - run : pip install --upgrade pip - run : pip install mkdocs-material - run : pip install mkdocs-jupyter - run : pip install mkdocs-macros-plugin # C'est ici qu'il faut ajouter si besoin # les instructions pour installer avec pip # les autres plugins MkDocs ou extensions MarkDown # souhait\u00e9s pour le d\u00e9ploiement du site... - run : mkdocs gh-deploy --force Au prochain red\u00e9marrage avec la commande mkdocs serve en local et au prochain d\u00e9ploiement distant sur GitHub le plugin macros sera actif. Hello world : # A la racine du projet, \u00e0 cot\u00e9 de mkdocs.yml , cr\u00e9er un fichier main.py tel que : def define_env ( env ): \"Toto's hook\" @env . macro def hello () : return \"**Demat d'an holl**<br>_Toto est dans la place !_\" Dans n'importe quel fichier source.md on peut alors ins\u00e9rer le code MarkDown suivant {{ hello() }} pour appeler la macro hello() et obtenir le rendu qu'elle g\u00e9n\u00e8re : MarkDown g\u00e9n\u00e9r\u00e9 **Demat d'an holl** <br>_Toto est dans la place !_ Rendu Demat d'an holl Toto est dans la place ! Remarques : Une macro comme hello() doit renvoyer une chaine de caract\u00e8res constitu\u00e9e de MarkDown, \\(\\LaTeX\\) , HTML, SVG, ... Pour permettre l'affichage de la syntaxe MarkDown **Demat d'an holl**<br>_Toto est dans la place !_ d'appel de la macro dans ce site, le plugin/framework MkDocs-Macros y est d\u00e9sactiv\u00e9. La configuration des macros pr\u00e9sent\u00e9es ici est donc r\u00e9alis\u00e9e dans le d\u00e9p\u00f4t et leur ex\u00e9cution est rendu visible sur le site . Toujours en construction... #","title":"Python pour les macros"},{"location":"Python/#python-pour-les-macros","text":"Le plugin/framework MkDocs-Macros offre de \"lib\u00e9rer la puissance de Mkdocs, en utilisant des variables et des macros\" \u00e0 partir de scripts cod\u00e9s en Python...","title":"Python pour les macros"},{"location":"Python/#installation","text":"Dans Visual Studio Code (VSC), ouvrir un nouveau Terminal (menu Terminal > New Terminal ) pour saisir : pip install mkdocs-macros-plugin Dans le dossier du projet, modifier les fichiers suivants tels que : mkdocs.yml plugins : - search - mkdocs-jupyter : include_source : True - macros ci.yml name : ci on : push : branches : - main jobs : deploy : runs-on : ubuntu-latest steps : - uses : actions/checkout@v2 - uses : actions/setup-python@v2 with : python-version : 3.x - run : pip install --upgrade pip - run : pip install mkdocs-material - run : pip install mkdocs-jupyter - run : pip install mkdocs-macros-plugin # C'est ici qu'il faut ajouter si besoin # les instructions pour installer avec pip # les autres plugins MkDocs ou extensions MarkDown # souhait\u00e9s pour le d\u00e9ploiement du site... - run : mkdocs gh-deploy --force Au prochain red\u00e9marrage avec la commande mkdocs serve en local et au prochain d\u00e9ploiement distant sur GitHub le plugin macros sera actif.","title":"Installation"},{"location":"Python/#hello-world","text":"A la racine du projet, \u00e0 cot\u00e9 de mkdocs.yml , cr\u00e9er un fichier main.py tel que : def define_env ( env ): \"Toto's hook\" @env . macro def hello () : return \"**Demat d'an holl**<br>_Toto est dans la place !_\" Dans n'importe quel fichier source.md on peut alors ins\u00e9rer le code MarkDown suivant {{ hello() }} pour appeler la macro hello() et obtenir le rendu qu'elle g\u00e9n\u00e8re : MarkDown g\u00e9n\u00e9r\u00e9 **Demat d'an holl** <br>_Toto est dans la place !_ Rendu Demat d'an holl Toto est dans la place ! Remarques : Une macro comme hello() doit renvoyer une chaine de caract\u00e8res constitu\u00e9e de MarkDown, \\(\\LaTeX\\) , HTML, SVG, ... Pour permettre l'affichage de la syntaxe MarkDown **Demat d'an holl**<br>_Toto est dans la place !_ d'appel de la macro dans ce site, le plugin/framework MkDocs-Macros y est d\u00e9sactiv\u00e9. La configuration des macros pr\u00e9sent\u00e9es ici est donc r\u00e9alis\u00e9e dans le d\u00e9p\u00f4t et leur ex\u00e9cution est rendu visible sur le site .","title":"Hello world :"},{"location":"Python/#toujours-en-construction","text":"","title":"Toujours en construction..."}]}